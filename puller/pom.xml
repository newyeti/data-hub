<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.newyeti</groupId>
		<artifactId>datahub</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<groupId>com.newyeti.datahub</groupId>
	<artifactId>puller</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>puller</name>
	<description>PUlls data from internet</description>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>schemas</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
							<goal>protocol</goal>
							<goal>idl-protocol</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/resources/</sourceDirectory>
							<outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<from>
						<image>sachindramaharjan/jre-alpine-curl:19.0.2_7-jre-alpine</image>
					</from>
					<to>
						<image>registry.hub.docker.com/sachindramaharjan/datahub-${project.artifactId}</image>
					</to>
					<container>
						<environment>
							<JAVA_OPTS>-Xms512m -Xmx1024m</JAVA_OPTS>
							<CONFIG_SERVER_URI>http://config-server</CONFIG_SERVER_URI>
							<CONFIG_SERVER_PORT>9091</CONFIG_SERVER_PORT>
							<CONFIG_SERVER_TIMEOUT>300</CONFIG_SERVER_TIMEOUT>
							<ENTRYPOINT>com.newyeti.datahub.puller.PullerApplication</ENTRYPOINT>
						</environment>
						<entrypoint>
							<shell>/bin/sh</shell>
							<option>-c</option>
							<arg>/app/start.sh</arg>
						</entrypoint>
					</container>
					<extraDirectories>
						<paths>
							<path>
								<from>../scripts/jib</from>
								<into>/app</into>
							</path>
						</paths>
						<permissions>
							<permission>
								<file>/app/wait-for-it.sh</file>
								<mode>755</mode>
							</permission>
							<permission>
								<file>/app/start.sh</file>
								<mode>755</mode>
							</permission>
						</permissions>
					</extraDirectories>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-schema-registry-maven-plugin</artifactId>
				<version>${schema-registry.version}</version>
				<configuration>
					<schemaRegistryUrls>
							<param>http://schema-registry:8081</param>
					</schemaRegistryUrls>
					<subjects>
							<team-value>${project.basedir}/src/main/resources/avro/schemas/team.avsc</team-value>
					</subjects>
				</configuration>
				<goals>
					<goal>register</goal>
				</goals>
			</plugin>

		</plugins>
	</build>

	</project>
